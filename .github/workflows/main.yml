name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
    tags:
      - 'v*.*.*'

jobs:
  development:
    runs-on: ubuntu-latest
    environment: development
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Set up Google Cloud credentials
        run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > /tmp/service-account.json
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Build and start Docker containers for development
        run: |
          docker-compose -f docker-compose.yml -p development up --build -d

      - name: Run Terraform apply for development
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}"

  production:
    runs-on: ubuntu-latest
    environment: production
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Set up Google Cloud credentials
        run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > /tmp/service-account.json
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Build and start Docker containers for production
        run: |
          docker-compose -f docker-compose.yml -p production up --build -d

      - name: Run Terraform apply for production
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}"